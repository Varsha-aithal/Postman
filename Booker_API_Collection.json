{
	"info": {
		"_postman_id": "e1b00d17-5943-4d2c-88fd-7780c7eead48",
		"name": "Booker API Collection",
		"description": "This is a simple Restful Booker API project, used postman for automation api testing.  \nWebsite: [https://restful-booker.herokuapp.com/apidoc/index.html](https://restful-booker.herokuapp.com/apidoc/index.html)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11660046",
		"_collection_link": "https://grey-satellite-915567.postman.co/workspace/92cf0a9e-a910-425e-81f2-eadd2054559e/collection/11660046-e1b00d17-5943-4d2c-88fd-7780c7eead48?action=share&source=collection_link&creator=11660046"
	},
	"item": [
		{
			"name": "Ping - HealthCheck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/ping",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"ping"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth - CreateToken",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify status code is 200\", function(){",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"const tokenID = pm.response.json();",
							"pm.environment.set(\"token\", tokenID.token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - GetBookingIds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify status code is 200\", function(){",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"const response = pm.response.json();",
							"const bookingID = pm.variables.get(\"bookingID\");",
							"",
							"console.log(\"Looking for Booking ID:\", bookingID);",
							"if (!bookingID) {",
							"    pm.test(\"Booking ID is not found\", function () {",
							"        pm.execution.setNextRequest(\"Booking - CreateBooking\")",
							"        console.log(\"Booking ID Not found and executing request Booking - CreateBooking\")",
							"    });",
							"}",
							"else {",
							"    for (let i = 0; i < response.length; i++) {",
							"        if (response[i].bookingid == bookingID) {",
							"            pm.test(\"Booking ID matches\", function () {",
							"                pm.execution.setNextRequest(\"Booking - GetBookingById\")",
							"                console.log(\"Booking ID found and executing request Booking - GetBookingById\")",
							"            });",
							"        }",
							"    }",
							"}",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - CreateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify status code is 200\", function(){",
							"    pm.response.to.have.status(200);    ",
							"})",
							"",
							"pm.test(\"Verify Booking Details created Successfully\", function(){",
							"    pm.expect(pm.environment.has(\"bookingID\")).to.equal(true);",
							"});",
							"",
							"pm.execution.setNextRequest(\"Booking - GetBookingIds\")"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\": \"{{first_name}}\",\n    \"lastname\": \"{{last_name}}\",\n    \"totalprice\": {{totalprice}},\n    \"depositpaid\": {{depositpaid}},\n    \"bookingdates\": {\n        \"checkin\": \"{{checkin}}\",\n        \"checkout\": \"{{checkout}}\"\n    },\n    \"additionalneeds\": \"{{additionalneeds}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - GetBookingById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verify firstname and lastname match with BookingId details\", function () {",
							"    try {",
							"        const response = pm.response.json();",
							"     ",
							"pm.environment.set(\"first_name\", response.firstname);",
							"pm.environment.set(\"last_name\", response.lastname);",
							"        pm.expect(response.firstname).to.eql(pm.variables.get(\"first_name\"));",
							"        pm.expect(response.lastname).to.eql(pm.variables.get(\"last_name\"));",
							"    } catch (e) {",
							"        pm.expect.fail(\"Response is not in JSON format\");",
							"    }",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{bookingID}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - PartialUpdateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify status code is 200\", function () {",
							"    pm.response.to.have.status(200);  });",
							"",
							"const response = pm.response.json();",
							"pm.test(\"Verify if the Firstname and Lastname of Guest Updated Successfully\", function(){",
							"    pm.expect(response.firstname).to.eql(\"James007\");",
							"    pm.expect(response.lastname).to.eql(\"BrownSmith\");",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Cookie",
						"value": "token = {{token}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Basic",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"James007\",\n    \"lastname\" : \"BrownSmith\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/booking/{{bookingID}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - UpdateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify status code is 200\", function () {             ",
							"    pm.response.to.have.status(200); });",
							"",
							"const response = pm.response.json();",
							"pm.test(\"Verify Booking Details Updates Successfully\", function(){",
							"    pm.expect(response.firstname).to.eql(\"Varsha\");",
							"    pm.expect(response.lastname).to.eql(\"Aithal\")",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token = {{token}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Basic",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"Varsha\",\n    \"lastname\" : \"Aithal\",\n    \"totalprice\" : 120,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2024-01-02\",\n        \"checkout\" : \"2025-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{bookingID}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking - DeleteBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});",
							"",
							"pm.environment.unset(\"bookingID\");",
							"pm.environment.unset(\"token\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token = {{token}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Basic",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/booking/{{bookingID}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingID}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}